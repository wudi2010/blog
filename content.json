{"meta":{"title":"吴迪的技术博客","subtitle":"天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣","description":"天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣","author":"wudi","url":"https://wudi2010.github.io/blog"},"pages":[{"title":"all categories","date":"2016-12-02T07:43:33.000Z","updated":"2016-12-02T09:48:12.000Z","comments":false,"path":"categories/index.html","permalink":"https://wudi2010.github.io/blog/categories/index.html","excerpt":"","text":""},{"title":"alltags","date":"2016-12-02T09:31:19.000Z","updated":"2016-12-02T09:45:52.000Z","comments":false,"path":"tags/index.html","permalink":"https://wudi2010.github.io/blog/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"React + Redux 基础学习笔记","slug":"react-and-redux-learning-note-basics","date":"2016-12-05T02:29:49.000Z","updated":"2016-12-05T03:40:55.000Z","comments":true,"path":"2016/12/05/react-and-redux-learning-note-basics/","link":"","permalink":"https://wudi2010.github.io/blog/blog/2016/12/05/react-and-redux-learning-note-basics/","excerpt":"","text":"零、环境搭建参考资料 英文原版文档 中文文档 首先要明确一点，虽然 redux 是由 flux 演变而来，但我们完全可以并且也应该抛开 react进行学习，这样可以避免一开始就陷入各种细节之中。 所以推荐使用 jsbin 进行调试学习，或者使用 react-create-app作为项目脚手架。 一、Redux是什么？ Redux is a predictable state container for JavaScript apps. Redux 是一个 JavaScript 状态容器，提供可预测化的状态管理。 先不要在意那些细节 总的来说，redux 使用 store 保存并管理页面中的各种状态（state） 当需要改变 state 时，使用 dispatch 调用 action creators 触发 action 接着使用纯函数（pure function）reducer 来处理这些 action，它会根据当前 state 和 action 返回（注意这里不是修改）新的 state view 层可以对于 state 进行订阅（subscribe），这样就可以得到新的 state，从而可以刷新界面（所以十分适合数据驱动的前端框架） 纯函数：简单的说就是对于同样的输入总是返回同样的输出，并且没有副作用的函数。（推荐学习了解下函数式编程）","categories":[{"name":"前端","slug":"前端","permalink":"https://wudi2010.github.io/blog/categories/前端/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://wudi2010.github.io/blog/tags/JavaScript/"},{"name":"React","slug":"React","permalink":"https://wudi2010.github.io/blog/tags/React/"},{"name":"Redux","slug":"Redux","permalink":"https://wudi2010.github.io/blog/tags/Redux/"}]},{"title":"博客第一篇","slug":"0-blog-first","date":"2016-12-02T06:30:17.000Z","updated":"2016-12-05T01:21:59.000Z","comments":true,"path":"2016/12/02/0-blog-first/","link":"","permalink":"https://wudi2010.github.io/blog/blog/2016/12/02/0-blog-first/","excerpt":"","text":"做为一个IT搞技术的，时刻不能放下学习，写文档笔记可以帮助我梳理学习的内容知识，巩固学习内容。在工作中还可以服务于他人，可为一举多得。原来写文档笔记载体是有道云笔记、WORD文档+网盘自己管理弄得技术笔记很茅草，不能很好的梳理技术知识，这是我建立这个技术博客的初衷。目标帮助自己和我的团队更好的完成日后的工作任务。 博客的建立其实博客的建立非常的偶然，做了好多年技术开发，时长看到别人编写技术博客。有时想自己写写，因为懒，嘿嘿都错过了。平时梳理技术的时候，也记些笔记，不过觉得做的还是不够精细，基本上复制粘贴的多，很多坑就自己知道。实际给别人看的时候，有时候也在坑别人。觉得还是写的态度有点不到位。偶然间看到一个前端开发者的博客，笔记内容写的比较新颖，于是决定使用他使用的技术，编写博客，把技术笔记放上去服务自己服务他人。选择的技术是nodejs为基础环境的hexo3。 主要是这几个优点吧(以下内容引用复制多一些，不过自己以完全实践过，多见谅）: 主要是这几个优点吧： 免费╮(╯▽╰)╭ 基于 Node.js 速度快、操作更简单、命令少，专注于写作本身 由于 deploy 命令，发布到 github 上生成静态站点也很简单所以整个 Blog 就是采用 hexo3 + github pages,主题基于 indigo 进行修改，下面就详细说说怎么搭起来吧.hexo在MAC下的安装Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。Hexo的安装是个很快速简便的过程，但依然还是有不少坑。这里记录个我的安装过程，给大家一些参考。以下是我安装时系统及软件版本，请尽量保证不低于这些版本号： OS ： OS X EI Capitan 10.11.3 XCode : 7.3 hexo : 3.2.2 node : 4.4.7 Git : 2.6.4 安装前提需要安装 Node.js 和 Git 两个应用程序，直接到官网安装最新版本即可，如已安装请跳过。 Node.js 官网 Git 官网 安装Hexo安装完Node.js 及 Git 后，即可使用npm来安装Hexo 1$ npm i(nstall) -g hexo npm 安装方式中 -g 的意思是全局安装。 初始化Hexo创建一个目录用来作为你的blog目录，例如 MyBlog；并在该目录中进行Hexo的初始化： 123$ hexo init MyBlog$ cd ~/MyBlog/$ npm install 新建完成后得到以下目录：12345678·|-- _config.yml|-- package.json|-- scaffolds|-- source| |-- _drafts| |-- _posts|-- themes 至此，你就完成了Hexo的安装及初始化，接下来我们就可以进行本地的预览啦：先安装hexo server 1$ npm i(nstall) --save hexo-server npm 安装方式中 –save 的意思是作为项目依赖(dependencies)进行安装，可以缩写为 -S (注意大写)此外还有 –save-dev 的意思是作为项目的「开发」依赖(devDependencies)进行安装，可以缩写为 -D (注意大写)这两种安装方式都会将这个包的名称和版本写进 package.json 配置文件中 然后生成静态页面并打开hexo本地服务 12$ hexo g(enerate) (或 hexo g)$ hexo s(erver) (或 hexo s) 按命令行提示，打开 http://localhost:4000/ 即可看到默认主题的默认页面了。可能加载会很慢，因为默认主题中使用了些Google的资源，后面更换主题就会快很多了。 配置与Github账户关联首先需要去Github注册一个账号，并新建一个名为 [your_account].github.io 的仓库。 个人在此位置的时候遇到了好多问题，解决了好久。github原来没有用过，github.io域名的仓库怎么建立？怎么部署到github上？学习好久，这其中有两个坑，下面把他先填上。 关于 github pages 项目站点（Project Pages）github 会根据 gh-pages 分支下文件生成静态页面，地址是 [yourName].github.io/[projectName]。（[yourName] 是你的账户名，[projectName] 是你的项目名） 个人或公司站点（User/Organization Pages）首先要创建一个叫做 [yourName].github.io 的项目，接着 github 会根据 master 分支下文件生成静态页面，地址是 [yourName].github.io/。 生成 github pages 此处坑已填 首先在github上建立一个项目，如果是项目站点用[projectName],个人站点用[yourname]。 进入你所建立的项目中，点击项目配置[settings]选项，配置改项目 下拉设置页面，找到GitHub Pages区域，点击[Lauch automatic page generator]按钮，就会按照你的定义生成一个项目介绍的模板，同样这时github pages，你要配置的项目站点或个人站点将已经启动。 部署上传Blog通过Hexo的部署命令，直接可以将编写好的blog上传到网络空间，对外发布。部署上传配置如下：打开前面创建的MyBlog目录下的 _config.yml 文件，在修改最下方的deploy为：*注意，冒号后面一定要加空格官方文档中是这么介绍的 1234567891011121314151617# You can use this:deploy: type: git repo: &lt;repository url&gt; branch: [branch] message: [message]# or this:deploy: type: git message: [message] repo: github: &lt;repository url&gt;,[branch] gitcafe: &lt;repository url&gt;,[branch] #repo: Repository URL#branch: Git branch to deploy the static site to#message: Commit message. The default commit message is Site updated: &#123;&#123; now(&apos;YYYY-MM-DD HH:mm:ss&apos;) &#125;&#125;. 接下来安装hexo的git部署，在命令行中执行：1$ npm install hexo-deployer-git --save 最后，将生成静态页面并部署到github的仓库中，执行：1234$ hexo d -g 或者$ hexo generate$ hexo deploy 当提示 INFO Deploy done: git 即上传成功，这时就可以通过 http:\\/\\/[your_account].github.io 来访问你的个人站点,如果是项目站点增加[projectName]。 此处有坑，刚注册完成github的，如果不配置sshkeys或者是gpgkey是部署不到gitpages中。所以ssh应该生成ssh的公司密钥对，gpg应该生成gpg公司密钥对，本人gpg是参见官方文档完成。具体内容如下： Download and install the GPG command line tools 下载GPG命令行工具 打开系统命令行执行。Open Terminal。 生成 GPG key。1gpg --gen-key hexo的基本配置以下是hexo配置文件 _config.yml 的基本内容及基本设置，更多个性化设置请参考官方文档： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Site ##页面信息title: Who&apos;s Blog ##标题，即浏览器标签栏显示的内容subtitle: Why so serious? ##副标题description: ##描述，简介author: wu di ##作者language: zh-CN ##语言timezone: Asia/Shanghai ##时区# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: http://wwww.charleswei.me ##域名，后面自定义域名后，写在这里，用 .github.io的话，这里用默认的不用改root: /permalink: :year/:month/:day/:title/permalink_defaults:# Directory ##文件目录，可不改source_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writing ##静态页面生成属性，可不改new_post_name: :year-:month-:day-:title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace:# Category &amp; Tag ##标签，可不改default_category: uncategorizedcategory_map:tag_map:# Date / Time format ##时间格式，可不改## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination ##每页显示文章数，按需改## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions ##主题设置## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: indigo# Deployment ##git部署关联## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/wudi2010/blog.git,gh_pages branch: master 主题配置Hexo具有高定制的主题效果，你可以从Hexo的主题库中选择合适的主题，也可以自己制作。以我现在使用的indigo主题为例。首先将主题库clone到MyBlog目录下的themes目录： 1git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo 安装less，主题使用less作为css预处理工具： 1npm install hexo-renderer-less --save 安装feed,用于生吃RSS： 1npm install hexo-generator-feed --save 安装json-content，用于生成静态站点数据，提供搜索功能的数据源： 1npm install hexo-generator-json-content --save 开启标签页： 1hexo new page tags 修改MyBlog/source/tags/index.md的源数据： 此处有坑，网上各地方的答案根本不好使，请严格按照下方编写。1234layout: tagsnoDate: truecomments: false--- 修改hexo配置文件_config.yml中的主题标签： 1theme: indigo 最后修改主题配置文件MyBlog/themes/indigo/_config.yml： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108# hexo-theme-indigo# https://github.com/yscoder/hexo-theme-indigo#添加新菜单项遵循以下规则# menu:# link: fontawesome图标，省略前缀，本主题前缀为 icon-，必须# text: About 菜单显示的文字，如果省略即默认与图标一致，首字母会转大写# url: /about 链接，绝对或相对路径，必须。# target: _blank 是否跳出，省略则在当前页面打开menu: home: text: 主页 url: / archives: text: 归档 url: /archives tags: text: 标签 url: /tags th: text: 分类 url: /categories github: url: https://github.com/wudi2010 target: _blank about: text: 关于 url: /aboutrss: /atom.xml#你的头像urlavatar: /img/avatar.jpg#faviconfavicon: /img/favicon.ico# emailemail: 28679382@qq.com# 设置 Android L Chrome 浏览器状态栏颜色color: &apos;#3F51B5&apos;# 页面标题tags_title: 标签archives_title: 归档categories_title: 分类# 文章截断excerpt_render: falseexcerpt_length: 300excerpt_link: 阅读全文...mathjax: falsearchive_yearly: true#是否开启分享share: true#是否开启打赏，关闭 reward: falsereward: falsetitle: 谢谢大爷~wechat: /img/wechat.jpg #微信，关闭设为 falsealipay: /img/alipay.jpg #支付宝，关闭设为 false#是否开启搜索search: true#是否大屏幕下文章页隐藏导航hideMenu: false#是否开启toc#toc: falsetoc: list_number: true # 是否显示数字排序#文章页版权声明内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.iocopyright: 本文地址：&lt;a href=&quot;&lt;%- url_for(page.path).replace(/index\\.html$/, &apos;&apos;) %&gt;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;%- url.replace(/index\\.html$/, &apos;&apos;) %&gt;&lt;/a&gt;#站长统计，如要开启，输入CNZZ站点id，如 cnzz: 1255152447cnzz: false# Miscellaneousgoogle_analytics: falsegoogle_site_verification: false# lessless: compress: true paths: - source/css/style.less# 是否开启多说评论，填写你在多说创建的站点二级域名duoshuo: ysblog# 使用 disqus 时关闭多说评论#disqus_shortname: false# 规范网址# 让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径# https://support.google.com/webmasters/answer/139066# 假设配置为 canonical: http://imys.net，那么从搜索引擎中 www.imys.net 进入会重定向到 imys.netcanonical: false# 版权起始年份since_year: 2016# 用户页面中作者相关的描述性文字，如不需要设为 falseabout: false 最后生成部署，来看看效果吧12hexo cleanhexo d -g","categories":[],"tags":[{"name":"hexo3","slug":"hexo3","permalink":"https://wudi2010.github.io/blog/tags/hexo3/"}]},{"title":"最新开始的博客","slug":"My-New-Post","date":"2016-12-02T06:30:17.000Z","updated":"2016-12-03T06:27:45.000Z","comments":true,"path":"2016/12/02/My-New-Post/","link":"","permalink":"https://wudi2010.github.io/blog/blog/2016/12/02/My-New-Post/","excerpt":"","text":"使用说明重点说明模块Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem. Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake 代码模块1[rectangle setX: 10 y: 10 width: 20 height: 20]; Array.map1array.map(callback[, thisArg]) content webstorm 11代码自动换行开始写的时候才发现代码根本不会自己换行,去网上找教程依然找不到其他网友说的IDE settings,应该也是由于是版本不同的问题,后来在preferences-editor-general中找到了Use soft wraps in editor选项,勾选上即可自动换行.","categories":[{"name":"技术总结","slug":"技术总结","permalink":"https://wudi2010.github.io/blog/categories/技术总结/"}],"tags":[{"name":"Injury","slug":"Injury","permalink":"https://wudi2010.github.io/blog/tags/Injury/"},{"name":"Fight","slug":"Fight","permalink":"https://wudi2010.github.io/blog/tags/Fight/"},{"name":"Shocking","slug":"Shocking","permalink":"https://wudi2010.github.io/blog/tags/Shocking/"}]}]}